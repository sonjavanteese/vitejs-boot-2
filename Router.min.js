class Router{routes=[];mode=null;root="/";constructor(options){this.mode=window.history.pushState?"history":"hash",options.mode&&(this.mode=options.mode),options.root&&(this.root=options.root),this.listen()}add=(path,cb)=>(this.routes.push({path:path,cb:cb}),this);remove=path=>{for(let i=0;i<this.routes.length;i+=1)if(this.routes[i].path===path)return this.routes.slice(i,1),this;return this};flush=()=>(this.routes=[],this);clearSlashes=path=>path.toString().replace(/\/$/,"").replace(/^\//,"");getFragment=()=>{let fragment="";if("history"===this.mode)fragment=this.clearSlashes(decodeURI(window.location.pathname+window.location.search)),fragment=fragment.replace(/\?(.*)$/,""),fragment="/"!==this.root?fragment.replace(this.root,""):fragment;else{const match=window.location.href.match(/#(.*)$/);fragment=match?match[1]:""}return this.clearSlashes(fragment)};navigate=(path="")=>("history"===this.mode?window.history.pushState(null,null,this.root+this.clearSlashes(path)):window.location.href=`${window.location.href.replace(/#(.*)$/,"")}#${path}`,this);listen=()=>{clearInterval(this.interval),this.interval=setInterval(this.interval,50)};interval=()=>{this.current!==this.getFragment()&&(this.current=this.getFragment(),this.routes.some(route=>{const match=this.current.match(route.path);return!!match&&(match.shift(),route.cb.apply({},match),match)}))}}export default Router;